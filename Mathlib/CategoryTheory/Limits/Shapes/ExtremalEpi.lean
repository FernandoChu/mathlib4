/-
Copyright (c) 2020 Fernando Chu. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Fernando Chu
-/
import Mathlib.CategoryTheory.Category.Factorisation
import Mathlib.CategoryTheory.Iso
import Mathlib.CategoryTheory.MorphismProperty.MonoFactorization

/-!
# Extremal epimorphisms

In this file, we define extremal epimorphisms. A extremal epimorphism is an epimorphism `f`
such that it doesn't factor through any non-trivial monomorphism.
One of the main interests in this notion is that if a category with equalizers has images
`f = e ‚â´ m`, then `e` is an extremal epimorphism.

We also show that all strong epimorphisms are extremal, the converse holds when appropriate
pullbacks exist.

## References

* <https://ncatlab.org/nlab/show/extremal+epimorphism>
-/

universe v u

namespace CategoryTheory

open Category Limits

variable {C : Type u} [Category.{v} C]
variable {P Q : C}

-- A extremal epi `f` is an epi that doesn't factor through any non-trivial monomorphism.
class ExtremalEpi (f : P ‚ü∂ Q) : Prop where
  -- The epimorphism condition on `f`
  epi : Epi f := by infer_instance
  -- The left lifting property with respect to all monomorphism -/
  isIso_of_monoFactor : ‚àÄ (d : MonoFactorisation f), IsIso d.m

instance (priority := 100) epi_of_extremalEpi (f : P ‚ü∂ Q) [ExtremalEpi f] : Epi f :=
  ExtremalEpi.epi

section

variable {R : C} (f : P ‚ü∂ Q) (g : Q ‚ü∂ R)

/-- An isomorphism is in particular an extremal epimorphism. -/
instance (priority := 100) extremalEpi_of_isIso [IsIso f] : ExtremalEpi f where
  isIso_of_monoFactor d := by
    constructor
    use inv f ‚â´ d.e; constructor
    ¬∑ apply (cancel_mono d.m (g := d.m ‚â´ inv f ‚â´ d.e) (h := ùüô _)).1; aesop_cat
    ¬∑ aesop_cat

theorem ExtremalEpi.of_arrow_iso {A B A' B' : C} {f : A ‚ü∂ B} {g : A' ‚ü∂ B'}
    (e : Arrow.mk f ‚âÖ Arrow.mk g) [h : ExtremalEpi f] : ExtremalEpi g :=
  { epi := by rw [Arrow.iso_w' e]; infer_instance
    isIso_of_monoFactor d := by
        let fac : MonoFactorisation f := ‚ü®d.I, d.m ‚â´ e.inv.right, e.hom.left ‚â´ d.e, by aesop_cat‚ü©
        have := h.isIso_of_monoFactor fac
        exact IsIso.of_isIso_comp_right d.m e.inv.right }

theorem ExtremalEpi.iff_of_arrow_iso {A B A' B' : C} {f : A ‚ü∂ B} {g : A' ‚ü∂ B'}
    (e : Arrow.mk f ‚âÖ Arrow.mk g) : ExtremalEpi f ‚Üî ExtremalEpi g := by
  constructor <;> intro
  exacts [ExtremalEpi.of_arrow_iso e, ExtremalEpi.of_arrow_iso e.symm]

end

/-- A extremal epimorphism that is a monomorphism is an isomorphism. -/
theorem isIso_of_mono_of_extremalEpi (f : P ‚ü∂ Q) [Mono f] [ExtremalEpi f] : IsIso f :=
  ExtremalEpi.isIso_of_monoFactor ‚ü®P, f, ùüô _, id_comp f‚ü©

section

variable (C)

/-- A extremal epi category is a category in which every epimorphism is extremal. -/
class ExtremalEpiCategory : Prop where
  /-- A extremal epi category is a category in which every epimorphism is extremal. -/
  extremalEpi_of_epi : ‚àÄ {X Y : C} (f : X ‚ü∂ Y) [Epi f], ExtremalEpi f

end

theorem extremalEpi_of_epi [ExtremalEpiCategory C] (f : P ‚ü∂ Q) [Epi f] : ExtremalEpi f :=
  ExtremalEpiCategory.extremalEpi_of_epi _

section

attribute [local instance] extremalEpi_of_epi

instance (priority := 100) balanced_of_extremalEpiCategory [ExtremalEpiCategory C] :
    Balanced C where
  isIso_of_mono_of_epi _ _ _ := isIso_of_mono_of_extremalEpi _

end

section

-- Strong epimorphisms are extremal
instance extremalEpi_of_strongEpi {X Y : C} (f : X ‚ü∂ Y) [StrongEpi f] : ExtremalEpi f where
  isIso_of_monoFactor d := by
    let square : CommSq d.e f d.m (ùüô _) := ‚ü®by rw [d.fac]; aesop_cat‚ü©
    have : IsSplitEpi d.m := .mk' ‚ü®square.lift , square.fac_right‚ü©
    apply isIso_of_mono_of_isSplitEpi d.m

lemma hasLift_of_extremalEpi {X Y A B : C} {f : X ‚ü∂ Y} [ExtremalEpi f] {g : A ‚ü∂ B} [Mono g]
    {i : X ‚ü∂ A} {h : Y ‚ü∂ B} [HasPullback h g] (sq : CommSq i f g h) : sq.HasLift := by
  let l := pullback.lift f i (w := sq.w.symm)
  let fs := pullback.fst h g
  let sn := pullback.snd h g
  have isIso_f := ExtremalEpi.isIso_of_monoFactor
    ‚ü®pullback h g, fs, pullback.lift f i (w := sq.w.symm), pullback.lift_fst f i (w := sq.w.symm)‚ü©
  have faa : f ‚â´ inv fs = l := by aesop_cat
  refine CommSq.HasLift.mk' ‚ü®inv fs ‚â´ sn , ?_, ?_‚ü©
  ¬∑ rw [‚Üê assoc, faa, pullback.lift_snd f i (w := sq.w.symm)]
  ¬∑ rw [assoc, (cancel_epi fs (g := inv fs ‚â´ sn ‚â´ g)).1 (by simp; rw [pullback.condition])]

--  For a category with pullbacks, extremal epimorphisms are strong
instance strongEpi_of_extremalEpi [HasPullbacks C] {X Y : C} (f : X ‚ü∂ Y) [ExtremalEpi f] :
    StrongEpi f where
  llp A B g := .mk fun sq ‚Ü¶ hasLift_of_extremalEpi sq

end

end CategoryTheory
